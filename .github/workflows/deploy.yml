name: 🚀 Deploy Backend & AI to EC2

on:
  push:
    branches:
      - main
    # 也可以只监测后端目录改动：
    # paths:
    #   - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 签出代码
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      # 2. 安装 pnpm（仅用于后续 rsync 中排除 node_modules）
      - name: 📥 Install pnpm
        run: npm install -g pnpm

      # 3. 准备 SSH 私钥
      - name: 🔑 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 4. Rsync 整个后端目录到 EC2（含 API 与 AI 服务代码）
      - name: 📤 Sync backend to EC2
        run: |
          rsync -avz --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
            backend/ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/deploy/dispatch-backend/

      # 5. 远端无缓存构建并重启容器
      - name: 🔁 Build & Restart on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/deploy/dispatch-backend || exit 1

            # 停掉旧容器
            docker-compose -f docker-compose.uat.yml down

            # 强制无缓存构建（API 的 pnpm build 会在容器内执行）
            docker-compose -f docker-compose.uat.yml build --no-cache

            # 启动所有服务
            docker-compose -f docker-compose.uat.yml up -d
          EOF
