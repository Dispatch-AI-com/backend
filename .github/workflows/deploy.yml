# .github/workflows/deploy-backend-and-ai.yml
name: 🚀 Deploy Backend & AI to EC2

on:
  push:
    branches:
      - main
    # 只有 backend 目录内容有改动才触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        # 所有本地命令都在 backend/ 下执行
        working-directory: backend

    steps:
      # 1. 签出代码
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      # 2. 安装 pnpm（CI 校验用，不影响远端构建）
      - name: 📥 Install pnpm
        run: npm install -g pnpm

      # 3. （可选）本地依赖校验
      - name: 📦 Validate dependencies
        run: pnpm install --frozen-lockfile

      # 4. 准备 SSH 密钥
      - name: 🔑 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 5. 同步整个 backend（含 ai/）到 EC2
      - name: 📤 Rsync backend to EC2
        run: |
          rsync -avz --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
            ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/deploy/dispatch-backend/

      # 6. 在 EC2 上无缓存重建并重启所有服务
      - name: 🔁 Build & Restart on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/deploy/dispatch-backend || exit 1

            # 停掉旧容器
            docker-compose -f docker-compose.uat.yml down

            # 强制无缓存重建（包含 api 与 ai 两个服务）
            docker-compose -f docker-compose.uat.yml build --no-cache

            # 启动所有服务
            docker-compose -f docker-compose.uat.yml up -d
          EOF
