# ----------------------------
# Build 阶段
# ----------------------------
FROM node:20-alpine AS builder

WORKDIR /app

RUN apk update && apk add --no-cache bash curl git python3 py3-pip docker-cli
RUN npm install -g pnpm

# 复制依赖文件并安装
COPY package.json pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile

# 复制源码 + 配置
COPY . .

# 构建产物
RUN pnpm build && ls -l /app/dist

# ----------------------------
# 运行阶段
# ----------------------------
FROM node:20-alpine

WORKDIR /app

RUN apk update && apk add --no-cache bash curl git python3 py3-pip docker-cli
RUN npm install -g pnpm

# 复制构建产物
COPY --from=builder /app/dist ./dist
COPY package.json pnpm-lock.yaml* ./

# 安装生产依赖
RUN pnpm install --prod --frozen-lockfile

# 环境变量，实际值由 compose 注入
ENV NODE_ENV=uat
ENV LOG_TO_FILE=true
ENV SHOW_ERROR_MESSAGE=true

# 端口
EXPOSE 4000

# 启动
CMD ["node", "dist/main.js"]