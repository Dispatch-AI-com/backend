services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dispatchai-api
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - redis
      - ai
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/dispatchai
      - SHOW_ERROR_MESSAGE=true
      - LOG_TO_FILE=false
    networks:
      - dispatchai-network
    volumes:
      - ./:/app
      - /app/node_modules
      
  mongodb:
    image: mongo:latest
    container_name: dispatchai-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - dispatchai-network
  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile
    container_name: dispatchai-ai
    env_file:
      - .env
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./ai/app:/app/app
    depends_on:
      - redis
      - mongodb
    networks:
      - dispatchai-network

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: dispatchai-cloudflared
    restart: unless-stopped
    command: tunnel run
    volumes:
      - ./cloudflared:/etc/cloudflared
    networks:
      - dispatchai-network
    depends_on:
      - api
    profiles:
      - tunnel

  redis:
    image: redis:7-alpine
    container_name: dispatchai-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dispatchai-network

networks:
  dispatchai-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: